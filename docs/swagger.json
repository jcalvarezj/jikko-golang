{
    "swagger": "2.0",
    "info": {
        "description": "This is an example Web server that sorts arrays and displays user info",
        "title": "Jikko-Golang REST API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/arrays": {
            "post": {
                "description": "Serves the /arrays resource POST requests by receiving a JSON object with an unsorted numbers array and responds with a JSON object with that array and its sorted version",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Serves the /arrays resource POST requests",
                "parameters": [
                    {
                        "description": "The unsorted array of numbers",
                        "name": "unsorted",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/arrays.ArraysJSON"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "description": "Renders the index.html template for the /users resource, showing all users and a form to query a user",
                "produces": [
                    "text/html"
                ],
                "summary": "Serves the /users resource",
                "operationId": "get-all-users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "description": "Renders the user.html template for the /users/{id} resource, showing the user by specified path variable {id}",
                "produces": [
                    "text/html"
                ],
                "summary": "Serves the /users/{id} resource,",
                "operationId": "get-user-by-id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        }
    },
    "definitions": {
        "arrays.ArraysJSON": {
            "type": "object",
            "properties": {
                "sorted": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "unsorted": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        }
    }
}